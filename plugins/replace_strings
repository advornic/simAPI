# Copyright (c) 2015, Arista Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#   Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
#   Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
#
#   Neither the name of Arista Networks nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ARISTA NETWORKS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This plugin replaces strings in "show" commands.

# pylint: disable=C0103

import jsonrpclib

# Example
REPLACEMENTS = {
    # This is for JSON mode - the inner quotes are needed
    # in order to avoid replacing into Ethernet49/1.
    "'Ethernet4'": "'Ethernet60/1'",

    # This is for TEXT mode - the extra space is needed
    # in order to avoid replacing into Ethernet49/1.
    "Et4 ": "Et60/1 ",
    }

def main(server, cmd=None, params=None):

    req_format = 'json'
    if 'format' in params:
        req_format = params['format']
    elif len(params) == 3:
        req_format = params[-1]

    try:
        output = server.runCmds(1, [cmd], req_format)
    except jsonrpclib.ProtocolError:
        return None

    string_output = str(output[0])

    for init, replace in REPLACEMENTS.iteritems():
        string_output = string_output.replace(init, 
                                              replace)
    output = eval(string_output)

    return output

